{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Programs/cs373-idb/frontend/src/components/Artists.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ArtistsCard from \"./ArtistsCard\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Artists() {\n  _s();\n  const [artistsData, setArtistsData] = useState({\n    \"Artists\": [{\n      \"name\": \"Chidish Gambino\",\n      \"id\": \"73sIBHcqh3Z3NyqHKZ7FOL\",\n      \"popularity\": 79,\n      \"albums\": [\"Atavista\"],\n      \"album_covers\": [\"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\", \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\", \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"],\n      \"future_events\": [\"Z698xZu0ZaGQo\", \"Z698xZbpZ17GA_K\", \"G5vHZb1niHezV\", \"Event 4 id\"],\n      \"image_url\": \"https://i.scdn.co/image/ab6761610000f178c3dc5429b676b16d451e5f77\",\n      \"genre_id\": \"KnvZfZ7vAvv\"\n    }]\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchData = async currentPage => {\n    try {\n      const response = await axios.get(`http://localhost:5000/GetArtists`, {\n        params: {\n          page: currentPage,\n          per_page: 20\n        }\n      });\n      console.log(response.data);\n      setArtistsData(response.data);\n      const responseLength = await axios.get(`http://localhost:5000/GetAllArtists`);\n      if (artistsData && artistsData.Artists) {\n        const newArtists = artistsData.Artists.map((newArtists, index) => {\n          const defaultArtist = artistsData.Artists[index] || {};\n          return {\n            ...defaultArtist,\n            ...newArtists\n          };\n        });\n        setArtistsData({\n          Artists: newArtists\n        });\n      }\n      console.log(artistsData);\n      setTotalPages(responseLength.data.length);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  fetchData();\n  useEffect(() => {\n    fetchData(currentPage);\n  }, [artistsData.Artists, currentPage]);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \" m-5\",\n      children: \"Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row g-5 m-5\",\n      children: artistsData[\"Artists\"].map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-xl-3 \",\n        children: /*#__PURE__*/_jsxDEV(ArtistsCard, {\n          name: artist.name,\n          id: artist.id,\n          popularity: artist.popularity,\n          genreId: artist.genre_id,\n          albums: artist.albums,\n          albumCovers: artist.album_covers,\n          futureEvents: artist.future_events,\n          image_url: artist.image_url,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination  p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"page-item\",\n          disabled: currentPage === 1,\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), Array.from({\n          length: totalPages\n        }, (_, index) => currentPage === index + 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \" page-item text-bg-dark\",\n          children: currentPage\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"page-item\",\n          disabled: currentPage === totalPages,\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Artists, \"m75bwPFMXoQuzvhRYHyZshJAX+Y=\");\n_c = Artists;\nexport default Artists;\nvar _c;\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"names":["React","ArtistsCard","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Artists","_s","artistsData","setArtistsData","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","get","params","page","per_page","console","log","data","responseLength","newArtists","map","index","defaultArtist","length","error","handlePageChange","newPage","children","class","fileName","_jsxFileName","lineNumber","columnNumber","artist","name","id","popularity","genreId","genre_id","albums","albumCovers","album_covers","futureEvents","future_events","image_url","className","disabled","onClick","Array","from","_","_c","$RefreshReg$"],"sources":["/Users/chris/Programs/cs373-idb/frontend/src/components/Artists.js"],"sourcesContent":["import React from 'react';\nimport ArtistsCard from \"./ArtistsCard\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\n\nfunction Artists() {\n\n    const [artistsData, setArtistsData] = useState({\n        \"Artists\": [\n            {\n                \"name\": \"Chidish Gambino\",\n                \"id\": \"73sIBHcqh3Z3NyqHKZ7FOL\",\n                \"popularity\": 79,\n                \"albums\": [\"Atavista\"],\n                \"album_covers\": [\"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\", \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\", \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"],\n                \"future_events\": [\"Z698xZu0ZaGQo\", \"Z698xZbpZ17GA_K\", \"G5vHZb1niHezV\", \"Event 4 id\"],\n                \"image_url\": \"https://i.scdn.co/image/ab6761610000f178c3dc5429b676b16d451e5f77\",\n                \"genre_id\": \"KnvZfZ7vAvv\",\n            }\n        ]\n    });\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n\n    const fetchData = async (currentPage) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/GetArtists`, {\n                params: { page: currentPage, per_page: 20 }\n            });\n            console.log(response.data);\n            setArtistsData(response.data);\n            const responseLength = await axios.get(`http://localhost:5000/GetAllArtists`);\n            if (artistsData && artistsData.Artists) {\n                const newArtists = artistsData.Artists.map((newArtists, index) => {\n                  const defaultArtist = artistsData.Artists[index] || {};\n                  return {\n                    ...defaultArtist,\n                    ...newArtists\n                  };\n                });\n                setArtistsData({Artists : newArtists});\n            }\n            console.log(artistsData);\n            setTotalPages(responseLength.data.length)\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    };\n    fetchData();\n\n    useEffect(() => {\n        fetchData(currentPage);\n    }, [ artistsData.Artists, currentPage]);\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage);\n    };\n\n    return (\n        <>\n            <h1 class=\" m-5\">Artists</h1>\n\n            <div class=\"row g-5 m-5\" >\n                {\n                    artistsData[\"Artists\"].map((artist, index) => (\n                        <div key={index} class=\"col-xl-3 \">\n                            <ArtistsCard\n                                name={artist.name}\n                                id={artist.id}\n                                popularity={artist.popularity}\n                                genreId={artist.genre_id}\n                                albums={artist.albums}\n                                albumCovers={artist.album_covers}\n                                futureEvents={artist.future_events}\n                                image_url={artist.image_url}\n                            > </ArtistsCard>\n                        </div>\n                        \n                    ))\n                }\n            </div>\n\n            <div class=\"d-flex justify-content-center align-items-center\">\n                <div className=\"pagination  p-5\">\n                    <button class=\"page-item\" disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)}>Back</button>\n                    {Array.from({ length: totalPages }, (_, index) => (\n                        currentPage === index + 1 ?\n                            <button key={index} class=\" page-item text-bg-dark\" >{currentPage}</button>\n                            :\n                            <></>\n                    ))}\n                    <button class=\"page-item\" disabled={currentPage === totalPages} onClick={() => handlePageChange(currentPage + 1)}>Next</button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Artists;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}