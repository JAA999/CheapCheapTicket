{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Programs/cs373-idb/frontend/src/components/Genre.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport GenreCard from './GenreCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Genre() {\n  _s();\n  const [genresData, setGenresData] = useState([{\n    \"genreId\": \"KnvZfZ7vAvv\",\n    \"name\": \"GenreName\",\n    \"popular_artists\": [\"73sIBHcqh3Z3NyqHKZ7FOL\", \"Artists 2 id\", \"Artists 3 id\"],\n    \"upcoming_events\": [\"Event ID\"],\n    \"top_songs\": [\"Song 1\", \"Song 2\", \"Song 3\"],\n    \"events_price_range\": [0, 0]\n  }]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchData = async currentPage => {\n    try {\n      const response = await axios.get(`http://localhost:5000/GetGenres`, {\n        params: {\n          page: currentPage,\n          per_page: 5\n        }\n      });\n      console.log(response.data);\n      const responseLength = await axios.get(`http://localhost:5000/GetAllGenres`);\n      const newGenres = response.data.map((newGenre, index) => {\n        // console.log(genresData[index] + \"THIS IS THE GENRES DATA\");\n        const defaultGenre = genresData[index] || {};\n        return {\n          ...defaultGenre,\n          ...newGenre\n        };\n      });\n      console.log(newGenres + \" Data to be passed to state\");\n      setGenresData(newGenres);\n      setTotalPages(responseLength.data.length);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData(currentPage);\n  }, [currentPage]);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"m-5\",\n      children: \"Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row d-flex justify-content-center genre-card-container \",\n      children: genresData.map((genre, index) => /*#__PURE__*/_jsxDEV(GenreCard, {\n        genreId: genre.id,\n        name: genre.name,\n        popularArtists: genre.popular_artists,\n        upcomingEvents: genre.upcoming_events,\n        topSongs: genre.top_songs,\n        eventsPriceRange: genre.events_price_range\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination  p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"page-item\",\n          disabled: currentPage === 1,\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), Array.from({\n          length: totalPages\n        }, (_, index) => currentPage === index + 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \" page-item text-bg-dark\",\n          children: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"page-item\",\n          disabled: currentPage === totalPages,\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Genre, \"0YXI1Z22c5CdJPGWxfZqvYSq7+E=\");\n_c = Genre;\nexport default Genre;\nvar _c;\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"names":["React","useState","useEffect","GenreCard","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Genre","_s","genresData","setGenresData","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","get","params","page","per_page","console","log","data","responseLength","newGenres","map","newGenre","index","defaultGenre","length","error","handlePageChange","newPage","children","class","fileName","_jsxFileName","lineNumber","columnNumber","genre","genreId","id","name","popularArtists","popular_artists","upcomingEvents","upcoming_events","topSongs","top_songs","eventsPriceRange","events_price_range","className","disabled","onClick","Array","from","_","_c","$RefreshReg$"],"sources":["/Users/chris/Programs/cs373-idb/frontend/src/components/Genre.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport GenreCard from './GenreCard';\nimport axios from 'axios'\n\n\nfunction Genre() {\n\n  const [genresData, setGenresData] = useState(\n    [\n      {\n        \"genreId\": \"KnvZfZ7vAvv\",\n        \"name\": \"GenreName\",\n        \"popular_artists\": [\"73sIBHcqh3Z3NyqHKZ7FOL\", \"Artists 2 id\", \"Artists 3 id\"],\n        \"upcoming_events\": [\"Event ID\"],\n        \"top_songs\": [\"Song 1\", \"Song 2\", \"Song 3\"],\n        \"events_price_range\": [0, 0]\n      }\n    ]\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const fetchData = async (currentPage) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/GetGenres`, {\n        params: { page: currentPage, per_page: 5 }\n      });\n      console.log(response.data)\n      \n      const responseLength = await axios.get(`http://localhost:5000/GetAllGenres`);\n\n      const newGenres = response.data.map((newGenre, index) => {\n        // console.log(genresData[index] + \"THIS IS THE GENRES DATA\");\n        const defaultGenre = genresData[index] || {};\n        return {\n          ...defaultGenre,\n          ...newGenre\n        };\n      });\n      console.log(newGenres +\" Data to be passed to state\")\n\n      setGenresData( newGenres );\n      setTotalPages(responseLength.data.length)\n    } catch (error) {\n      console.error(\"Error:\", error)\n    }\n  };\n\n  useEffect(() => {\n    fetchData(currentPage);\n  }, [currentPage]);\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <>\n\n      <h1 class=\"m-5\">Genres</h1>\n      <div class=\"row d-flex justify-content-center genre-card-container \">\n        {\n          genresData.map((genre, index) => (\n            <GenreCard key={index}\n              genreId={genre.id}\n              name={genre.name}\n              popularArtists={genre.popular_artists}\n              upcomingEvents={genre.upcoming_events}\n              topSongs={genre.top_songs}\n              eventsPriceRange={genre.events_price_range}\n            />\n          ))\n        }\n      </div>\n\n      <div class=\"d-flex justify-content-center align-items-center\">\n        <div className=\"pagination  p-5\">\n          <button class=\"page-item\" disabled={currentPage === 1} onClick={() => handlePageChange(currentPage - 1)}>Back</button>\n          {Array.from({ length: totalPages }, (_, index) => (\n            currentPage === index + 1 ?\n              <button class=\" page-item text-bg-dark\" >{currentPage}</button>\n              :\n              <></>\n          ))}\n          <button class=\"page-item\" disabled={currentPage === totalPages} onClick={() => handlePageChange(currentPage + 1)}>Next</button>\n        </div>\n      </div>\n    </>\n\n  );\n}\n\nexport default Genre;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}