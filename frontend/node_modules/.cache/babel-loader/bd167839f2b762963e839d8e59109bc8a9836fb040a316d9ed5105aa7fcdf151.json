{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Programs/cs373-idb/frontend/src/components/GenreCard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GenreCard(props) {\n  _s();\n  const [eventIdPairs, setEventIdPairs] = useState({});\n  useEffect(() => {\n    const fetchEventNames = async () => {\n      const eventNames = [\"defaultEventName 1\", \"defaultEventName 2\", \"defaultEventName 3\"];\n      const limitedFutureEvents = [...props.upcomingEvents.slice(0, 3)];\n      while (limitedFutureEvents.length < 3) {\n        limitedFutureEvents.push(\"\");\n      }\n      for (let i = 0; i < 3; i++) {\n        if (limitedFutureEvents[i] !== \"\") {\n          try {\n            console.log(limitedFutureEvents[i] + \" ID PASSED IN\");\n            const response = await axios.get(`http://localhost:5000/GetEvent/${limitedFutureEvents[i]}`);\n            eventNames[i] = response.data.event_Name;\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        }\n      }\n      const eventIdPairs = Object.fromEntries(limitedFutureEvents.map((key, index) => [key, eventNames[index]]));\n      setEventIdPairs(eventIdPairs);\n    };\n    fetchEventNames();\n  }, [props.upcomingEvents]);\n  const [popularArtists, setpopularArtists] = useState({});\n  useEffect(() => {\n    const fetchArtistNames = async () => {\n      const artistsNames = [\"art 1\", \"art 2\", \"art 3\"];\n      const topArtistsIds = [...props.popularArtists.slice(0, 3)];\n      while (topArtistsIds.length < 3) {\n        topArtistsIds.push(\"\");\n      }\n      for (let i = 0; i < 3; i++) {\n        if (topArtistsIds[i] !== \"\") {\n          try {\n            const response = await axios.get(`http://localhost:5000/GetArtist/${topArtistsIds[i]}`);\n            artistsNames[i] = response.data.name;\n          } catch (error) {\n            console.error('Error:', error);\n          }\n        }\n      }\n      const popularArtists = Object.fromEntries(topArtistsIds.map((key, index) => [key, artistsNames[index]]));\n      setpopularArtists(popularArtists);\n    };\n    fetchArtistNames();\n  }, [props.popularArtists]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"genre-card row text-start p-5 rounded-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"col-lg-12  \",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          class: \"genre-card-title\",\n          to: `/genre/${props.genreId}`,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-4 d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"genre-card-subtitle\",\n          children: \"Top Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), props.topSongs.map((song, index) => index < 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: song\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-4 d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"genre-card-subtitle\",\n          children: \"Popular Artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), Object.entries(popularArtists).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/artists/artistspage/${key}`,\n            class: \"genre-card-link\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 47\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-lg-4 d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"genre-card-subtitle\",\n          children: \"Venues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), Object.entries(eventIdPairs).map(([key, value], index) => index < 3 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/venue/${key}`,\n            class: \"genre-card-link\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 51\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(GenreCard, \"TexYTIXu+V2Wx/dCszQHkDEjIKs=\");\n_c = GenreCard;\nexport default GenreCard;\nvar _c;\n$RefreshReg$(_c, \"GenreCard\");","map":{"version":3,"names":["React","Link","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GenreCard","props","_s","eventIdPairs","setEventIdPairs","fetchEventNames","eventNames","limitedFutureEvents","upcomingEvents","slice","length","push","i","console","log","response","get","data","event_Name","error","Object","fromEntries","map","key","index","popularArtists","setpopularArtists","fetchArtistNames","artistsNames","topArtistsIds","name","children","class","to","genreId","fileName","_jsxFileName","lineNumber","columnNumber","topSongs","song","entries","value","_c","$RefreshReg$"],"sources":["/Users/chris/Programs/cs373-idb/frontend/src/components/GenreCard.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios'\n\n\n\nfunction GenreCard(props) {\n\n    const [eventIdPairs, setEventIdPairs] = useState({});\n    useEffect(() => {\n        const fetchEventNames = async () => {\n            const eventNames = [\"defaultEventName 1\", \"defaultEventName 2\", \"defaultEventName 3\"];\n            const limitedFutureEvents = [...props.upcomingEvents.slice(0, 3)];\n\n            while (limitedFutureEvents.length < 3) {\n                limitedFutureEvents.push(\"\");\n            }\n\n            for (let i = 0; i < 3; i++) {\n                if (limitedFutureEvents[i] !== \"\") {\n                    try {\n                        console.log(limitedFutureEvents[i] + \" ID PASSED IN\")\n                        const response = await axios.get(`http://localhost:5000/GetEvent/${limitedFutureEvents[i]}`);\n                        eventNames[i] = response.data.event_Name;\n                    } catch (error) {\n                        console.error('Error:', error);\n                    }\n                }\n            }\n            const eventIdPairs = Object.fromEntries(\n                limitedFutureEvents.map((key, index) => [key, eventNames[index]])\n            )\n            setEventIdPairs(eventIdPairs);\n        }\n        fetchEventNames();\n    }, [props.upcomingEvents]);\n\n    const [popularArtists, setpopularArtists] = useState({});\n    useEffect(() => {\n        const fetchArtistNames = async () => {\n            const artistsNames = [\"art 1\", \"art 2\", \"art 3\"];\n            const topArtistsIds = [...props.popularArtists.slice(0, 3)];\n\n            while (topArtistsIds.length < 3) {\n                topArtistsIds.push(\"\");\n            }\n\n            for (let i = 0; i < 3; i++) {\n                if (topArtistsIds[i] !== \"\") {\n                    try {\n                        const response = await axios.get(`http://localhost:5000/GetArtist/${topArtistsIds[i]}`);\n                        artistsNames[i] = response.data.name;\n                    } catch (error) {\n                        console.error('Error:', error);\n                    }\n                }\n            }\n            const popularArtists = Object.fromEntries(\n                topArtistsIds.map((key, index) => [key, artistsNames[index]])\n            );\n            setpopularArtists(popularArtists);\n        }\n        fetchArtistNames();\n    }, [props.popularArtists]);\n\n    return (\n        <>\n            <div class=\"genre-card row text-start p-5 rounded-5\">\n                <h1 class=\"col-lg-12  \"><Link class=\"genre-card-title\" to={`/genre/${props.genreId}`}>{props.name}</Link></h1>\n                <div class=\"col-lg-4 d-flex flex-column\">\n                    <h1 class=\"genre-card-subtitle\">Top Songs</h1>\n                    {\n                        props.topSongs.map((song, index) => (\n                            index < 3 ?\n                                <span key={index}>{song}</span>\n                                :\n                                null\n                        ))\n                    }\n                </div>\n\n                <div class=\"col-lg-4 d-flex flex-column\">\n                    <h1 class=\"genre-card-subtitle\" >Popular Artists</h1>\n                    {\n                        Object.entries(popularArtists).map(([key, value], index) => (\n                            <span key={index}><Link to={`/artists/artistspage/${key}`} class=\"genre-card-link\">{value}</Link></span>\n                        ))\n                    }\n                </div>\n\n                <div class=\"col-lg-4 d-flex flex-column\">\n                    <h1 class=\"genre-card-subtitle\">Venues</h1>\n                    {\n                        Object.entries(eventIdPairs).map(([key, value], index) => (\n                            index < 3 ?\n                                <span key={index}><Link to={`/venue/${key}`} class=\"genre-card-link\">{value}</Link></span>\n                                :\n                                null\n                        ))\n                    }\n                </div >\n\n\n            </div >\n        </>\n\n    );\n}\n\nexport default GenreCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}